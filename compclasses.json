// only classes offered in Spring 2021

{	dept: “COMP”,
	code: 110,
	name: “Introduction to Programming”,
	description: “An introduction to programming. Fundamental programming skills, typically using Java or JavaScript. Problem analysis and algorithm design. Students may not receive credit for both COMP 110 and COMP 116. Students may not receive credit for this course after receiving credit for COMP 116 or higher. Honors version available”,
	prereq: [“COMP101”],
	req: [],
	hours: 3,
},{	dept: “COMP”,
	code: 116,
	name: “Introduction to Scientific Programming”,
	description: “An introduction to programming for computationally oriented scientists. Fundamental programming skills, typically using MATLAB or Python. Problem analysis and algorithm design with examples drawn from simple numerical and discrete problems. Students can receive credit for only one of COMP 110 and 116.”,
	prereq: [“COMP101”],
	req: [],
	hours: 3,
},{	dept: “COMP”,
	code: 126,
	name: “Practical Web Design and Development for Everyone”,
	description: “A ground-up introduction to current principles, standards, and best practice in website design, usability, accessibility, development, and management through project-based skills development in HTML5, CSS, and basic JavaScript. Intended for nonmajors.”,
	prereq: [],
	req: [],
	hours: 3,
},{	dept: “COMP”,
	code: 210,
	name: “Data Structures and Analysis”,
	description: “This course will teach you how to organize the data used in computer programs so that manipulation of that data can be done efficiently on large problems and large data instances. Rather than learning to use the data structures found in the libraries of programming languages, you will be learning how those libraries are constructed, and why the items that are included in them are there (and why some are excluded).”,
	prereq: [“COMP110”],
	req: [“COMP283”],
	hours: 3,
},{	dept: “COMP”,
	code: 211,
	name: “Systems Fundamentals”,
	description: “This is the first course in the introductory systems sequence. Students enter the course having taken an introductory programming course in a high-level programming language (COMP 110) and a course in discrete structures. The overarching goal is to bridge the gap between a students' knowledge of a high-level programming language (COMP 110) and computer organization (COMP 311).”,
	prereq: [“COMP210”,”COMP283”],
	req: [],
	hours: 3,
},{	"dept": "COMP",
	"code": 672,
	"name": "Simulation Modeling and Analysis",
	"description": "Introduces students to modeling, programming, and statistical analysis applicable to computer simulations. Emphasizes statistical analysis of simulation output for decision-making. Focuses on discrete-event simulations and discusses other simulation methodologies such as Monte Carlo and agent-based simulations. Students model, program, and run simulations using specialized software. Familiarity with computer programming recommended.",
	"prereq": [],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 662,
	"name": "Scientific Computation II",
	"description": "Theory and practical issues arising in linear algebra problems derived from physical applications, e.g., discretization of ODEs and PDEs. Linear systems, linear least squares, eigenvalue problems, singular value decomposition.",
	"prereq": [],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 590,
	"name": "Topics in Computer Science",
	"description": "Permission of the instructor. This course has variable content and may be taken multiple times for credit. Different sections may be taken in the same semester. Honors version available",
	"prereq": [],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 585,
	"name": "Serious Games",
	"description": "Concepts of computer game development and their application beyond entertainment to fields such as education, health, and business. Course includes team development of a game. Honors version available",
	"prereq": ["COMP210&COMP211&COMP301&COMP311|COMP401&COMP410&COMP411"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 581,
	"name": "COMP",
	"description": "Hands-on introduction to robotics with a focus on the computational aspects. Students will build and program mobile robots. Topics include kinematics, actuation, sensing, configuration spaces, control, and motion planning. Applications include industrial, mobile, personal, and medical robots. Honors version available",
	"prereq": ["COMP210&COMP211&COMP301&COMP311|COMP401&COMP410&COMP411"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 576,
	"name": "Mathematics for Image Computing",
	"description": "Mathematics relevant to image processing and analysis using real image computing objectives and provided by computer implementations.",
	"prereq": ["COMP116|COMP210|COMP401"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 572,
	"name": "Computational Photography",
	"description": "The course provides a hands on introduction to techniques in computational photography--the process of digitally recording light and then performing computational manipulations on those measurements to produce an image or other representation. The course includes an introduction to relevant concepts in computer vision and computer graphics.",
	"prereq": ["COMP401&COMP410"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 562,
	"name": "Introduction to Machine Learning",
	"description": "Machine learning as applied to speech recognition, tracking, collaborative filtering and recommendation systems. Classification, regression, support vector machines, hidden Markov models, principal component analysis, and deep learning.",
	"prereq": ["COMP401&COMP410"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 560,
	"name": "Artificial Intelligence",
	"description": "Introduction to techniques and applications of modern artificial intelligence. Combinatorial search, probabilistic models and reasoning, and applications to natural language understanding, robotics, and computer vision.",
	"prereq": ["COMP210&COMP211&COMP301|COMP401&COMP410"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 555,
	"name": "Bioalgorithms",
	"description": "Bioinformatics algorithms. Topics include DNA restriction mapping, finding regulatory motifs, genome rearrangements, sequence alignments, gene prediction, graph algorithms, DNA sequencing, protein sequencing, combinatorial pattern matching, approximate pattern matching, clustering and evolution, tree construction, Hidden Markov Models, randomized algorithms.",
	"prereq": ["COMP401&COMP410"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 550,
	"name": "Algorithms and Analysis",
	"description": "Formal specification and verification of programs. Techniques of algorithm analysis. Problem-solving paradigms. Survey of selected algorithms.",
	"prereq": ["COMP210&COMP211&COMP301|COMP 410"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 541,
	"name": "Digital Logic and Computer Design",
	"description": "This course is an introduction to digital logic as well as the structure and electronic design of modern processors. Students will implement a working computer during the laboratory sessions.",
	"prereq": ["COMP210&COMP211&COMP301&COMP311|COMP401&COMP410&COMP411"],
	"req": [],
	"hours": 4,
},{	"dept": "COMP",
	"code": 533,
	"name": "Distributed Systems",
	"description": "Distributed systems and their goals; resource naming, synchronization of distributed processes; consistency and replication; fault tolerance; security and trust; distributed object-based systems; distributed file systems; distributed Web-based systems; and peer-to-peer systems.",
	"prereq": ["COMP431|COMP524|COMP530"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 524,
	"name": "Programming Language Concepts",
	"description": "Concepts of high-level programming and their realization in specific languages. Data types, scope, control structures, procedural abstraction, classes, concurrency. Run-time implementation.",
	"prereq": ["COMP210&COMP211&COMP301&COMP311&COMP455|COMP401&COMP410&COMP411&COMP455"],
	"req": [],
	"hours": 3,
},{	"dept": "COMP",
	"code": 523,
	"name": "Software Engineering Laboratory",
	"description": "Organization and scheduling of software engineering projects, structured programming, and design. Each team designs, codes, and debugs program components and synthesizes them into a tested, documented program product.",
	"prereq": ["COMP210&COMP211&COMP301&COMP311|COMP401&COMP410&COMP411"],
	"req": [],
	"hours": 4,
},
{	"dept": "COMP",
	"code": 521,
	"name": "Files and Databases",
	"description": "Placement of data on secondary storage. File organization. Database history, practice, major models, system structure and design.",
	"prereq": ["COMP210&COMP211&COMP301|COMP401&COMP410&COMP411"],
	"req": [],
	"hours": 3,
},
{	"dept": "COMP",
	"code": 520,
	"name": "Compilers",
	"description": "Design and construction of compilers. Theory and pragmatics of lexical, syntactic, and semantic analysis. Interpretation. Code generation for a modern architecture. Run-time environments. Includes a large compiler implementation project.",
	"prereq": ["COMP210&COMP211&COMP301&COMP311&COMP455|COMP401&COMP410&COMP411&COMP455"],
	"req": [],
	"hours": 3,
},
